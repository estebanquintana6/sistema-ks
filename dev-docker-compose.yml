version: "3"

services:
  ##########################
  ### SETUP SERVER CONTAINER
  ##########################
  server:
    # Tell docker what file to build the server from
    build:
      context: ./server
      dockerfile: Dockerfile-dev
    # The ports to expose
    expose:
      - 4000
    # Environment variables
    environment:
      - MONGO_URI=mongodb://PgFhF8vVZSa3PCPWhw2s8Nns65mhDP3mXhNkjheq:PBVcuCGWkaJn7k6kRCUebUWxGERH3gDpEF4NNpp4xKp2tdQvVrr7phMZJpRtfSC8B5an5g6GWssGcCAFnQxLCW3mCV3pgMGpyEQYuwh2jdGbFKJy7patC2pf3Ca95h2J@db:25575/
      - PORT=4000
      - JWT_SECRET=secretsecret
      - JWT_EXPIRY=30d
      - DEBUG=worker:*
      - MORGAN=combined
    # Port mapping
    ports:
      - 4000:4000
    # Volumes to mount
    volumes:
      - ./server/src:/app/server/src
      - ./client-files:/clients
      - ./insurance-files:/insurances
    # Run command
    # Nodemon for hot reloading (-L flag required for polling in Docker)
    command: nodemon -L src/server.js
    # Connect to other containers
    links:
      - db
    # Restart action
    restart: always
  ##########################
  ### SETUP CLIENT CONTAINER
  ##########################
  client:
    build:
      context: ./client
      dockerfile: Dockerfile-dev
    environment:
      - REACT_APP_PORT=3000
      - CHOKIDAR_USEPOLLING=true
    expose:
      - 80
      - 35729
    ports:
      - 80:8080
      - 35729:35729
    volumes:
      - ./client/src:/app/client/src
      - ./client/public:/app/client/public
    links:
      - server
    command: npm run start
    restart: always
  ##########################
  ### SETUP DB CONTAINER
  ##########################
  db:
    image: mongo:latest
    command: mongod --port 25575
    ports:
      - 25575:25575
    volumes:
      - mongodb_data_container:/data/db
    restart: always

volumes:
  mongodb_data_container:
